// <auto-generated />
using System;
using FootballClubBackend.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FootballClubBackend.Migrations
{
    [DbContext(typeof(FootballClubDbContext))]
    [Migration("20230912164708_StatisticsMigration")]
    partial class StatisticsMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FootballClubBackend.Model.Statistics.AttackingStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<int>("FreekickGoals")
                        .HasColumnType("int");

                    b.Property<int>("HeadedGoals")
                        .HasColumnType("int");

                    b.Property<int>("LeftFootedGoals")
                        .HasColumnType("int");

                    b.Property<int>("RightFootedGoals")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnTarget")
                        .HasColumnType("int");

                    b.Property<int>("TotalGoals")
                        .HasColumnType("int");

                    b.Property<int>("TotalShots")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AttackingStatistics");
                });

            modelBuilder.Entity("FootballClubBackend.Model.Statistics.DefendingStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("AerialDuelSuccessRate")
                        .HasColumnType("real");

                    b.Property<int>("Blocks")
                        .HasColumnType("int");

                    b.Property<int>("Clearances")
                        .HasColumnType("int");

                    b.Property<float>("GroundDuelSuccessRate")
                        .HasColumnType("real");

                    b.Property<int>("Interception")
                        .HasColumnType("int");

                    b.Property<float>("TackleSuccessRate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("DefendingStatistics");
                });

            modelBuilder.Entity("FootballClubBackend.Model.Statistics.GeneralStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FoulsConceded")
                        .HasColumnType("int");

                    b.Property<int>("FoulsWon")
                        .HasColumnType("int");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("MinutesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("RedCards")
                        .HasColumnType("int");

                    b.Property<int>("Starts")
                        .HasColumnType("int");

                    b.Property<int>("SubbedOff")
                        .HasColumnType("int");

                    b.Property<int>("YellowCards")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeneralStatistics");
                });

            modelBuilder.Entity("FootballClubBackend.Model.Statistics.GoalkeepingStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CleanSheets")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSaves")
                        .HasColumnType("int");

                    b.Property<int>("PenaltiesSaved")
                        .HasColumnType("int");

                    b.Property<float>("SavePercentage")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("GoalkeepingStatistics");
                });

            modelBuilder.Entity("FootballClubBackend.Model.Statistics.PassingStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CompletedCrosses")
                        .HasColumnType("int");

                    b.Property<int>("CompletedLongPasses")
                        .HasColumnType("int");

                    b.Property<int>("CompletedPasses")
                        .HasColumnType("int");

                    b.Property<int>("KeyPasses")
                        .HasColumnType("int");

                    b.Property<int>("SecondAssists")
                        .HasColumnType("int");

                    b.Property<int>("TotalLongPasses")
                        .HasColumnType("int");

                    b.Property<int>("TotalPasses")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PassingStatistics");
                });

            modelBuilder.Entity("FootballClubBackend.Model.Statistics.PlayerStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttackingStatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Competition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DefendingStatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneralStatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GoalkeepingStatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PassingStatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackingStatisticsId");

                    b.HasIndex("DefendingStatisticsId");

                    b.HasIndex("GeneralStatisticsId");

                    b.HasIndex("GoalkeepingStatisticsId");

                    b.HasIndex("PassingStatisticsId");

                    b.ToTable("PlayerStatistics");
                });

            modelBuilder.Entity("FootballClubBackend.Model.Statistics.PlayerStatistic", b =>
                {
                    b.HasOne("FootballClubBackend.Model.Statistics.AttackingStatistics", "AttackingStatistics")
                        .WithMany()
                        .HasForeignKey("AttackingStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballClubBackend.Model.Statistics.DefendingStatistics", "DefendingStatistics")
                        .WithMany()
                        .HasForeignKey("DefendingStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballClubBackend.Model.Statistics.GeneralStatistics", "GeneralStatistics")
                        .WithMany()
                        .HasForeignKey("GeneralStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballClubBackend.Model.Statistics.GoalkeepingStatistics", "GoalkeepingStatistics")
                        .WithMany()
                        .HasForeignKey("GoalkeepingStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballClubBackend.Model.Statistics.PassingStatistics", "PassingStatistics")
                        .WithMany()
                        .HasForeignKey("PassingStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttackingStatistics");

                    b.Navigation("DefendingStatistics");

                    b.Navigation("GeneralStatistics");

                    b.Navigation("GoalkeepingStatistics");

                    b.Navigation("PassingStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
